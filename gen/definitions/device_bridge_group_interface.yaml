---
name: Device Bridge Group Interface
rest_endpoint: /api/fmc_config/v1/domain/{DOMAIN_UUID}/devices/devicerecords/%v/bridgegroupinterfaces
doc_category: Devices
res_description: >-
  This device manages Device Bridge Virtual Interface (BVI) is a virtual interface that represents a bridge group.
test_tags: [TF_VAR_device_id, TF_VAR_interface_name]
adjust_body: true
attributes:
  - tf_name: device_id
    type: String
    reference: true
    requires_replace: true
    description: Id of the parent device.
    example: 76d24097-41c4-4558-a4d0-a8c07ac08470
    test_value: var.device_id
  - model_name: type
    type: String
    description: Type of the object; this value is always 'BridgeGroupInterface'.
    computed: true
  - model_name: name
    type: String
    description: Name of the Bridge Group interface, BVI<bridge_group_id>.
    computed: true
    computed_body_param: true
    data_source_query: true
  # General
  - model_name: ifname
    tf_name: logical_name
    type: String
    description: Logical name of the Brige Group interface.
    example: my_bridge_group_interface
    mandatory: true
  - model_name: description
    type: String
    description: Description of the object.
    example: "My Bridge Group Interface"
  - model_name: bridgeGroupId
    type: Int64
    description: Bridge Group Id.
    example: 100
    mandatory: true
    min_int: 1
    max_int: 250
    requires_replace: true
  - model_name: selectedInterfaces
    type: List
    description: List of physical interfaces that are part of the bridge group.
    attributes:
      - model_name: id
        type: String
        description: Id of the interface
        example: 76d24097-41c4-4558-a4d0-a8c07ac08470
        mandatory: true
        test_value: data.fmc_device_physical_interface.test.id
      - model_name: name
        type: String
        description: Name of the interface
        example: GigabitEthernet0/0
        mandatory: true
        test_value: data.fmc_device_physical_interface.test.name
  #IPv4 - Static
  - model_name: address
    data_path: [ipv4, static]
    tf_name: ipv4_static_address
    type: String
    description: Static IPv4 address. Conflicts with mode INLINE, PASSIVE, TAP, ERSPAN.
    example: "10.1.1.1"
  - model_name: netmask
    data_path: [ipv4, static]
    tf_name: ipv4_static_netmask
    type: String
    description: Netmask (width) for ipv4_static_address.
    example: "24"
  #IPv4 - DHCP
  - model_name: enableDefaultRouteDHCP
    data_path: [ipv4, dhcp]
    tf_name: ipv4_dhcp_obtain_route
    type: Bool
    description: >-
      Any non-null value here indicates to enable DHCPv4. Value `false` indicates to enable DHCPv4 without obtaining
      from there the default IPv4 route but anyway requires also ipv4_dhcp_route_metric to be set to exactly 1.
      Value `true` indicates to enable DHCPv4 and obtain the route and also requires ipv4_dhcp_route_metric to be
      non-null.
      The ipv4_dhcp_obtain_route must be null when using ipv4_static_address.
    exclude_example: true
    exclude_test: true
  # IPv6 address
  - model_name: addresses
    data_path: [ipv6]
    tf_name: ipv6_addresses
    exclude_example: true
    exclude_test: true
    type: List
    attributes:
      - model_name: address
        type: String
        description: IPv6 address without a slash and prefix.
        id: true
        example: "2004::"
      - model_name: prefix
        type: String
        description: Prefix width for the IPv6 address.
        id: true
        example: "124"
  #IPv6 Settings:
  - model_name: enableDADLoopback
    data_path: [ipv6]
    tf_name: ipv6_enable_dad
    description: Indicates whether to enable IPv6 DAD Loopback Detect (DAD).
    type: Bool
    exclude_example: true
    exclude_test: true
  - model_name: dadAttempts
    data_path: [ipv6]
    tf_name: ipv6_dad_attempts
    type: Int64
    description: Number of Duplicate Address Detection (DAD) attempts.
    min_int: 0
    max_int: 600
    exclude_example: true
    exclude_test: true
  - model_name: nsInterval
    data_path: [ipv6]
    tf_name: ipv6_ns_interval
    type: Int64
    description: Neighbor Solicitation (NS) interval.
    min_int: 1000
    max_int: 3600000
    exclude_example: true
    exclude_test: true
  - model_name: reachableTime
    data_path: [ipv6]
    tf_name: ipv6_reachable_time
    type: Int64
    description: The amount of time that a remote IPv6 node is considered reachable after a reachability confirmation event has occurred
    min_int: 0
    max_int: 3600000
    exclude_example: true
    exclude_test: true
  # ARP
  - model_name: arpConfig
    tf_name: arp_table_entries
    type: List
    attributes:
      - model_name: macAddress
        type: String
        description: MAC address for custom ARP entry in format 0123.4567.89ab.
        example: "0123.4567.89ab"
      - model_name: ipAddress
        type: String
        description: IP address for custom ARP entry
        example: "10.1.1.1"
      - model_name: enableAlias
        type: Bool
        description: Enable Alias for custom ARP entry
        example: true


test_prerequisites: |-
  data "fmc_device_physical_interface" "test" {
    device_id = var.device_id
    name      = var.interface_name
  }

  variable "device_id" { default = null } // tests will set $TF_VAR_device_ha_id
  variable "interface_name" {default = null} // tests will set $TF_VAR_interface_name
