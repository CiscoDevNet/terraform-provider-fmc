---
name: Device VTEP Policy
rest_endpoint: /api/fmc_config/v1/domain/{DOMAIN_UUID}/devices/devicerecords/%v/vteppolicies
res_description: >-
  This resource can manage the Device VTEP Policy. Practicioners should ensure only one resource
  `fmc_device_vtep_policy` exists for a single `fmc_device`, because the FMC API responds with the same single Id for
  every request to create a new VTEP Policy on the same Device.
  Thus multiple resources per Device would unexpectedly overwrite the same set of settings.
doc_category: Devices
test_tags: [TF_VAR_device_id]
attributes:
  - tf_name: device_id
    type: String
    reference: true
    description: >-
      Id of the parent device.
    example: 76d24097-41c4-4558-a4d0-a8c07ac08470
    test_value: fmc_device_physical_interface.test.device_id
  - model_name: type
    type: String
    description: Type of the object
    computed: true
  - model_name: nveEnable
    tf_name: nve_enabled
    description: Indicates whether to enable NVE on the `device_id`. Can only be false if `vteps` are empty.
    type: Bool
    default_value: "true"
    exclude_example: true
    minimum_test_value: "false"
    test_value: "true"
  - model_name: vtepEntries
    tf_name: vteps
    type: List
    description: List that can either be empty or contain one VTEP object.
    attributes:
      - model_name: id
        data_path: [sourceInterface]
        tf_name: source_interface_id
        id: true
        type: String
        description: Id of the source interface. It cannot refer to a subinterface.
        example: 76d24097-41c4-4558-a4d0-a8c07ac08470
        test_value: fmc_device_physical_interface.test.id
      - model_name: nveVtepId
        tf_name: nve_number
        type: Int64
        description: VTEP NVE number, currently must always be 1.
        min_int: 1
        max_int: 1
        example: "1"
      - model_name: nveDestinationPort
        tf_name: encapsulation_port
        type: Int64
        description: Encapsulation port number. For VXLAN suggested 4789 (default), for GENEVE suggested 6081.
        default_value: "4789"
        min_int: 1024
        max_int: 65535
        exclude_example: true
        exclude_test: true
      - model_name: nveEncapsulationType
        tf_name: encapsulation_type
        type: String
        description: Encapsulation type.
        enum_values: [VXLAN, GENEVE]
        default_value: VXLAN
        exclude_example: true
        exclude_test: true
      - model_name: nveNeighborDiscoveryType
        tf_name: neighbor_discovery
        type: String
        description: >-
          How to discover addresses of the neighbor VTEPs for the VTEP-to-VTEP communication.
          For STATIC_PEER_IP and DEFAULT_MULTICAST_GROUP you must set `neighbor_address_literal` to a single IP address.
          For STATIC_PEER_GROUP you must however set `neighbor_address_id` to a UUID of a network group
          and such network group can contain only IPv4 Hosts and IPv4 Ranges (but not Networks, etc.).
        enum_values:
          - NONE
          - STATIC_PEER_IP
          - STATIC_PEER_GROUP
          - DEFAULT_MULTICAST_GROUP
        mandatory: true
        example: STATIC_PEER_IP
      - model_name: value
        data_path: [nveNeighborAddress, literal]
        tf_name: neighbor_address_literal
        type: String
        description: >-
          Used for neighbor_discovery STATIC_PEER_IP, where it holds any unicast IP address.
          Used for neighbor_discovery DEFAULT_MULTICAST_GROUP, where it holds IP address in range 224.0.0.0 to
          239.255.255.255.
        example: 192.168.0.1
      - model_name: id
        data_path: [nveNeighborAddress, object]
        tf_name: neighbor_address_id
        type: String
        description: >-
          Used for neighbor_discovery STATIC_PEER_GROUP, where it holds UUID of the network group
          and such network group can contain only IPv4 Hosts and IPv4 Ranges (but not Networks, etc.).
        exclude_example: true
        exclude_test: true

test_prerequisites: |-
  resource "fmc_device_physical_interface" "test" {
    device_id    = var.device_id
    name         = "GigabitEthernet0/1"
    mode         = "NONE"
    logical_name = "myinterface-0-1"
  }

  variable "device_id" { default = null } // tests will set $TF_VAR_device_id
