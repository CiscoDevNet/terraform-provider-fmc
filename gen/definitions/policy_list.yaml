---
name: Policy List
rest_endpoint: /api/fmc_config/v1/domain/{DOMAIN_UUID}/object/policylists
doc_category: Objects
test_tags: [TF_VAR_interface_name]
attributes:
  - model_name: name
    type: String
    mandatory: true
    description: Name of the Policy List object.
    example: my_policy_list
    data_source_query: true
  - model_name: type
    type: String
    description: Type of the object; this value is always 'PolicyList'.
    computed: true
  - model_name: action
    type: String
    description: Select whether to allow or block access for matching conditions.
    mandatory: true
    enum_values: [PERMIT, DENY]
    example: PERMIT
  # Interfaces
  - model_name: interfaces
    type: List
    description: List of security zones/interface groups that contain the interfaces through which the device communicates with the management station.
    attributes:
      - model_name: id
        type: String
        description: Id of the object.
        example: 76d24097-41c4-4558-a4d0-a8c07ac08470
        test_value: fmc_security_zone.test.id
  - model_name: interfaceNames
    type: List
    description: List of interface names that are not in the zones.
    element_type: String
    example: "GigabitEthernet0/1"
    test_value: "[var.interface_name]"
  # Address
  - model_name: standardAccessListAddresses
    tf_name: address_standard_access_lists
    type: List
    description: Redistribute any routes that have a destination address that is permitted by a standard access list. address_standard_access_lists and address_ipv4_prefix_lists are mutually exclusive.
    attributes:
      - model_name: id
        type: String
        description: Id of the object.
        example: 76d24097-41c4-4558-a4d0-a8c07ac08470
        test_value: fmc_standard_acl.test.id
  - model_name: ipv4PrefixListAddresses
    tf_name: address_ipv4_prefix_lists
    type: List
    description: Redistribute any routes that have a destination address that is permitted by a prefix list. address_standard_access_lists and address_ipv4_prefix_lists are mutually exclusive.
    exclude_example: true
    exclude_test: true
    attributes:
      - model_name: id
        type: String
        description: Id of the object.
  # Next Hop
  - model_name: standardAccessListNextHops
    tf_name: next_hop_standard_access_lists
    type: List
    description: Redistribute any routes that have a next hop router address passed by a standard access list. next_hop_standard_access_lists and next_hop_ipv4_prefix_lists are mutually exclusive.
    attributes:
      - model_name: id
        type: String
        description: Id of the object.
        example: 76d24097-41c4-4558-a4d0-a8c07ac08470
        test_value: fmc_standard_acl.test.id
  - model_name: ipv4PrefixListNexthops
    tf_name: next_hop_ipv4_prefix_lists
    type: List
    description: Redistribute any routes that have a next hop router address passed by a prefix list. next_hop_standard_access_lists and next_hop_ipv4_prefix_lists are mutually exclusive.
    exclude_example: true
    exclude_test: true
    attributes:
      - model_name: id
        type: String
        description: Id of the object.
  # Route Source
  - model_name: standardAccessListRouteSources
    tf_name: route_source_standard_access_lists
    type: List
    description: Redistribute routes that have been advertised by routers at the address specified by the access list. route_source_standard_access_lists and route_source_ipv4_prefix_lists are mutually exclusive.
    attributes:
      - model_name: id
        type: String
        description: Id of the object.
        example: 76d24097-41c4-4558-a4d0-a8c07ac08470
        test_value: fmc_standard_acl.test.id
  - model_name: ipv4PrefixListRouteSources
    tf_name: route_source_ipv4_prefix_lists
    type: List
    description: Redistribute routes that have been advertised by routers at the address specified by the prefix list. route_source_standard_access_lists and route_source_ipv4_prefix_lists are mutually exclusive.
    exclude_test: true
    exclude_example: true
    attributes:
      - model_name: id
        type: String
        description: Id of the object.
  # AS Path
  - model_name: asPathLists
    tf_name: as_path_lists
    type: List
    description: Match a BGP autonomous system path.
    attributes:
      - model_name: id
        type: String
        description: Id of object.
        example: 76d24097-41c4-4558-a4d0-a8c07ac08470
        test_value: fmc_as_path.test.id
  # Community Rule
  - model_name: communityLists
    tf_name: community_lists
    type: List
    description: List of Standard/Expanded Community Lists.
    attributes:
      - model_name: id
        type: String
        description: Id of the object.
        example: 76d24097-41c4-4558-a4d0-a8c07ac08470
        test_value: fmc_standard_community_list.test.id
  - model_name: extendedCommunityLists
    tf_name: extended_community_lists
    type: List
    description: List of Extended Community Lists.
    exclude_test: true
    exclude_example: true
    attributes:
      - model_name: id
        type: String
        description: Id of the object.
  - model_name: matchCommunityExactly
    type: Bool
    description: Match BGP community exactly with the specified community.
    example: "true"
  # Metric and Tag
  - model_name: metric
    # FMCBUG CSCwp64302 Policy List's tag/metric does not accept coma separated values
    type: Int64
    description: Match routes that have a specified metric. Specyfing multiple values is not supported due to FMC API bug.
    min_int: 0
    max_int: 4294967295
    example: 100
  - model_name: tag
    # FMCBUG CSCwp64302 Policy List's tag/metric does not accept coma separated values
    type: Int64
    description: Match routes that have a specified security group tag. Specyfing multiple values is not supported due to FMC API bug.
    min_int: 1
    max_int: 4294967295
    example: 100

test_prerequisites: |-
  variable "interface_name" {default = null} // tests will set $TF_VAR_interface_name

  resource "fmc_security_zone" "test" {
    name           = "my_policy_list_security_zone"
    interface_type = "ROUTED"
  }

  resource "fmc_standard_acl" "test" {
    name        = "my_policy_list_std_acl"
    entries = [
      { action = "DENY", literals = [{ value = "10.1.1.0/24" }] }
    ]
  }

  resource "fmc_as_path" "test" {
    name = 263
    entries = [
      { action = "PERMIT", regular_expression = "107" },
      { action = "PERMIT", regular_expression = "108" },
    ]
  }

  resource "fmc_standard_community_list" "test" {
    name = "my_policy_list_std_community_list"
    entries = [{
      action       = "PERMIT"
      communities  = "100 200 300"
      }
    ]
  }
